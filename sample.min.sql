WITH SalesPerformance AS( SELECT e.employee_id, e.first_name, e.last_name, d.department_name, r.region_name, SUM(o.order_total) as total_sales, COUNT(DISTINCT o.order_id) as order_count, AVG(o.order_total) as avg_order_value FROM employees e INNER JOIN departments d ON e.department_id = d.department_id LEFT JOIN regions r ON e.region_id = r.region_id INNER JOIN orders o ON e.employee_id = o.salesperson_id WHERE o.order_date BETWEEN '2024-01-01' AND '2025-03-11' AND e.active_status = 'Y' GROUP BY e.employee_id, e.first_name, e.last_name, d.department_name, r.region_name) SELECT sp.employee_id, sp.first_name, sp.last_name, sp.department_name, sp.region_name, sp.total_sales, sp.order_count, sp.avg_order_value, RANK() OVER (PARTITION BY sp.department_name ORDER BY sp.total_sales DESC) as sales_rank, CASE WHEN sp.total_sales > 1000000 THEN 'Top Performer' WHEN sp.total_sales > 500000 THEN 'High Performer' ELSE 'Standard Performer' END as performance_category, (SELECT AVG(total_sales) FROM SalesPerformance sp2 WHERE sp2.department_name = sp.department_name) as dept_avg_sales FROM SalesPerformance sp WHERE sp.total_sales > ( SELECT AVG(o2.order_total) * 1.5 FROM orders o2 WHERE o2.order_date BETWEEN '2024-01-01' AND '2025-03-11' ) ORDER BY sp.total_sales DESC, sp.order_count DESC LIMIT 50;
